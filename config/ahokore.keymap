/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "se_us.dtsi"

#define NAV   1
#define CDE   2
#define NUM   3

/ {

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };

    behaviors {
        lhm: left_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            retro-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5>, <6>, <7>, <8>, <9>, <15>, <16>, <17>, <18>, <19>, <25>, <26>, <27>, <28>, <29>, <33>, <34>, <35>;
        };
        rhm: right_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "POSITIONAL_HOLD_TAP_RIGHT";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            retro-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0>, <1>, <2>, <3>, <4>, <10>, <11>, <12>, <13>, <14>, <20>, <21>, <22>, <23>, <24>, <30>, <31>, <32>;
        };

        /omit-if-no-ref/ ltr: behavior_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            retro-tap;
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// -------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T   |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G   |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B   |   |  N  |  M   |  ,  |  .  |  /  |
//             | GUI | NAV | SHFT |   | SPC | SYM  | ALT |
//&us_scln
        bindings = <
   &kp Q &kp W &kp E &kp R &kp T      &kp Y &kp U  &kp I    &kp O   &kp P
   &lhm LSFT A &lhm LCTL S &lhm LALT D &lhm LGUI F &kp G     &kp H &rhm RGUI J &rhm RALT K  &rhm RCTL L &rhm RSFT SE_SCLN
   &kp Z &kp X &kp C &kp V &kp B      &kp N &kp M  &us_comma  &us_dot  &us_slash
          &kp ESC &lt NUM DEL &kp BKSP   &kp SPC &lt CDE TAB &kp RET
                        >;
                };

        nav_layer {
            bindings = <
&kp ESC  &none    &none    &none    &none      &kp PG_UP &kp HOME  &kp UARW     &kp END  &kp BKSP
&kp LSFT &kp LCTL &kp RALT &kp LGUI &none      &kp PG_DN &kp LARW  &kp DARW     &kp RARW &kp DEL
&none    &none    &none    &none    &none      &none     &kp K_CUT &kp C_AC_CUT &none    &kp RET
                  &trans   &trans   &trans     &trans    &trans    &trans
            >;
        };

        code_layer {
            bindings = <
&kp BANG  &kp SE_AT &kp HASH     &kp SE_DLR   &kp PRCNT       &kp SE_CIRC  &kp SE_AMPR &kp SE_ASTR &kp SE_LPRN  &kp SE_RPRN
&none     &none     &kp SE_LCBR  &kp SE_RCBR  &none           &none        &kp SE_LPRN &kp SE_RPRN &kp SE_PIPE  &kp SE_MINS
&none     &none     &kp SE_LBRC  &kp SE_RBRC  &none           &none        &kp SE_PLUS &kp SE_EQL  &kp SE_BSLS  &kp SE_UNDS
                    &trans       &trans       &trans          &trans       &trans      &trans
            >;
        };

        num_layer {
            bindings = <
&kp N1    &kp N2    &kp N3    &kp N4    &kp N5      &kp N6    &kp N7       &kp N8   &kp N9   &kp N0
&kp F1    &kp F2    &kp F3    &kp F4    &kp F5      &kp MINUS &kp N4       &kp N5   &kp N6   &kp PIPE
&kp F6    &kp F7    &kp F8    &kp F9    &kp F10     &trans    &kp N1       &kp N2   &kp N3   &kp BSLH
                    &trans    &trans    &kp RET     &kp SPC   &ltr CDE N0  &us_dot
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &none &none  &none  &none       &none  &none  &none  &none &none
&bt BT_SEL 0 &none &none  &none  &none       &none  &none  &none  &none &none
&bt BT_SEL 1 &none &none  &none  &none       &none  &none  &none  &none &none
                   &trans &trans &trans      &trans &trans &trans
            >;
        };

        game_layer {
            bindings = <
&kp TAB  &kp Q  &kp W  &kp E  &kp R         &none &none &none &none &none 
&kp LSFT &kp A  &kp S  &kp D  &kp F         &none &none &none &none &none 
&kp LCTL &kp Z  &kp X  &kp C  &kp V         &none &none &none &none &none 
                &kp N1 &kp N2 &kp SPC       &none &none &none
            >;
        };

    };
};