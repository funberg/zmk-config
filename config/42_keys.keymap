/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#include "funberg/se_us.dtsi"
#include "funberg/homerow_mods.dtsi"
#include "funberg/tapdances.dtsi"

#define CDE   1
#define NUM   2
#define NAV   3
#define ADJ   4
#define GAM   5


#define COMBO(NAME, BINDINGS, KEYPOS) \
  combo_##NAME { \
    timeout-ms = <50>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
  }

&caps_word {
    continue-list = <SE_UNDS SE_MINS BKSP>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <CDE NUM>;
            then-layer = <ADJ>;
        };
    };

    combos {
/*
 0  1  2  3  4     5  6  7  8  9
10 11 12 13 14    15 16 17 18 19
20 21 22 23 24    25 26 27 28 29
      30 31 32    33 34 35
*/
        compatible = "zmk,combos";

        // Mouse compos for mods
        COMBO(lsft, &kp LEFT_SHIFT, 10 20);
        COMBO(lctrl, &kp LEFT_CONTROL, 11 21);
        COMBO(lalt, &kp LEFT_ALT, 12 22);
        COMBO(lgui, &kp LEFT_GUI, 13 23);

        COMBO(rgui, &kp LEFT_GUI, 16 26);
        COMBO(ralt, &kp LEFT_ALT, 17 27);
        COMBO(rctrl, &kp LEFT_CONTROL, 18 28);
        COMBO(rsft, &kp LEFT_SHIFT, 19 29);
    };

    macros {
        weapon1: weapon1 {
            label = "weapon1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp N3>
                , <&macro_pause_for_release>
                , <&macro_tap &kp N1>
                ;
        };
        weapon2: weapon2 {
            label = "weapon2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp N4>
                , <&macro_pause_for_release>
                , <&macro_tap &kp N2>
                ;
        };
    };

    behaviors {
        ht: hold_tap_retro {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_RETRO";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <400>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q       &kp W       &kp E        &kp R        &kp T           &kp Y   &kp U         &kp I        &kp O       &kp P
&lhm LSFT A &lhm LCTL S &lhm LALT D  &lhm LGUI F  &kp G           &kp H   &rhm LGUI J   &rhm LALT K  &rhm LCTL L &rhm_scln LSFT SE_SCLN
&ht LG(Z) Z &ht LG(X) X &ht LG(C) C  &ht LG(V) V  &ht LG(B) B     &kp N   &kp M         &us_comma    &us_dot     &us_slash
                        &lt NAV TAB  &mo NUM      &kp BKSP        &kp SPC &mo CDE       &kp RET
            >;
        };

        code_layer {
            bindings = <
&kp BANG        &kp SE_AT_MAC_ISO &kp HASH         &kp SE_DLR_MAC   &kp PRCNT                &kp SE_CIRC  &kp SE_AMPR  &kp SE_ASTR &kp SE_UNDS      &kp SE_MINS
&kp SE_TILD_MAC &none             &kp SE_LCBR_MAC  &kp SE_LBRC_MAC  &kp SE_LABK_MAC_ISO      &sk LSHIFT   &kp SE_LPRN  &kp SE_EQL  &kp SE_PIPE_MAC  &kp SE_DQUO
&kp ESC         &none             &kp SE_RCBR_MAC  &kp SE_RBRC_MAC  &kp SE_RABK_MAC_ISO      &caps_word   &kp SE_RPRN  &kp SE_PLUS &kp SE_BSLS_MAC  &kp SE_QUOT
                                  &trans           &trans           &trans                   &trans       &trans       &trans
            >;
        };

        num_layer {
            bindings = <
&kp F1    &kp F2    &kp F3    &kp F4    &kp F5           &none       &kp N7  &kp N8   &kp N9   &kp SE_ARNG
&kp F6    &kp F7    &kp F8    &kp F9    &kp F10          &kp SE_MINS &kp N4  &kp N5   &kp N6   &kp SE_ADIA
&kp ESC   &none     &none     &none     &kp F11          &kp SE_PLUS &kp N1  &kp N2   &kp N3   &kp SE_ODIA
                    &trans    &trans    &kp RET          &kp N0      &trans  &us_dot
            >;
        };

        nav_layer {
            bindings = <
&none    &none    &none    &none    &none      &kp PG_UP &kp HOME &kp UARW &kp END  &kp DEL
&kp LSFT &kp LCTL &kp LALT &kp LGUI &none      &kp PG_DN &kp LARW &kp DARW &kp RARW &kp BKSP
&kp ESC  &none    &none    &none    &none      &none     &none    &none    &none    &kp RET
                  &trans   &trans   &trans     &trans    &trans   &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &reset        &none  &none  &none       &kp C_NEXT  &kp C_MUTE    &none &none &tog GAM
&bt BT_SEL 0 &bt BT_SEL 1  &none  &none  &none       &kp C_PP    &kp C_VOL_UP  &none &none &none
&out OUT_TOG &none         &none  &none  &none       &kp C_PREV  &kp C_VOL_DN  &none &none &none
                           &trans &trans &trans      &trans      &trans        &trans
            >;
        };

        game_layer {
            bindings = <
&kp TAB  &kp Q  &kp W     &kp E      &kp R          &kp ESC    &none &none &none &tog GAM
&kp LSFT &kp A  &kp S     &kp D      &kp F          &none      &none &none &none &none
&kp LCTL &kp Z  &kp X     &kp C      &kp V          &kp LS(F1) &none &none &none &none
                &weapon1  &weapon2   &kp SPC        &none      &none &none
            >;
        };

    };
};